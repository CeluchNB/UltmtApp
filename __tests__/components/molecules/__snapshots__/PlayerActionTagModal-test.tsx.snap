// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should match snapshot 1`] = `
<Modal
  animationType="slide"
  hardwareAccelerated={false}
  onRequestClose={[Function]}
  testID="base-modal"
  transparent={true}
  visible={true}
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#30303050",
        "display": "flex",
        "flex": 1,
        "flexDirection": "row",
        "justifyContent": "center",
      }
    }
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#303030",
          "borderColor": "#ffd600",
          "borderRadius": 10,
          "color": "#ffd600",
          "elevation": 5,
          "flex": 1,
          "margin": 20,
          "padding": 25,
          "shadowColor": "#ffd600",
        }
      }
    >
      <Text
        numberOfLines={1}
        style={
          Array [
            Object {
              "color": "#ffd600",
              "fontSize": 61.64383561643835,
              "fontWeight": "bold",
            },
            undefined,
          ]
        }
      >
        Tags
      </Text>
      <View
        style={
          Object {
            "height": 200,
          }
        }
      >
        <RCTScrollView
          contentContainerStyle={
            Object {
              "flexDirection": "row",
              "flexWrap": "wrap",
            }
          }
          data={
            Array [
              "huck",
              "break",
              "layout",
            ]
          }
          getItem={[Function]}
          getItemCount={[Function]}
          keyExtractor={[Function]}
          onContentSizeChange={[Function]}
          onLayout={[Function]}
          onMomentumScrollBegin={[Function]}
          onMomentumScrollEnd={[Function]}
          onScroll={[Function]}
          onScrollBeginDrag={[Function]}
          onScrollEndDrag={[Function]}
          removeClippedSubviews={false}
          renderItem={[Function]}
          scrollEnabled={true}
          scrollEventThrottle={50}
          scrollToOverflowEnabled={true}
          stickyHeaderIndices={Array []}
          viewabilityConfigCallbackPairs={Array []}
        >
          <View>
            <View
              onLayout={[Function]}
              style={null}
            >
              <View
                collapsable={false}
                style={
                  Object {
                    "backgroundColor": "#303030",
                    "borderColor": "rgba(171, 171, 171, 0.29)",
                    "borderRadius": 8,
                    "borderStyle": "solid",
                    "borderWidth": 2,
                    "elevation": 0,
                    "flexDirection": "column",
                    "margin": 5,
                  }
                }
              >
                <View
                  accessibilityRole="button"
                  accessibilityState={
                    Object {
                      "disabled": false,
                      "selected": false,
                    }
                  }
                  accessible={true}
                  focusable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Array [
                      Object {
                        "overflow": "hidden",
                      },
                      Array [
                        Object {
                          "borderRadius": 8,
                        },
                        Object {
                          "flexGrow": 1,
                        },
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      Array [
                        Object {
                          "alignItems": "center",
                          "flexDirection": "row",
                          "flexGrow": 1,
                          "paddingLeft": 4,
                          "position": "relative",
                        },
                        Object {
                          "paddingRight": 4,
                        },
                      ]
                    }
                  >
                    <Text
                      ellipsizeMode="tail"
                      numberOfLines={1}
                      selectable={false}
                      style={
                        Array [
                          Object {
                            "color": "#000000",
                            "fontFamily": "System",
                            "fontWeight": "400",
                          },
                          Object {
                            "textAlign": "left",
                          },
                          Array [
                            Object {
                              "lineHeight": 24,
                              "marginVertical": 4,
                              "minHeight": 24,
                              "textAlignVertical": "center",
                            },
                            Object {
                              "color": "rgba(171, 171, 171, 0.87)",
                              "fontFamily": "System",
                              "fontWeight": "400",
                              "marginLeft": 8,
                              "marginRight": 8,
                            },
                            undefined,
                          ],
                        ]
                      }
                    >
                      huck
                    </Text>
                  </View>
                </View>
              </View>
            </View>
            <View
              onLayout={[Function]}
              style={null}
            >
              <View
                collapsable={false}
                style={
                  Object {
                    "backgroundColor": "#303030",
                    "borderColor": "rgba(171, 171, 171, 0.29)",
                    "borderRadius": 8,
                    "borderStyle": "solid",
                    "borderWidth": 2,
                    "elevation": 0,
                    "flexDirection": "column",
                    "margin": 5,
                  }
                }
              >
                <View
                  accessibilityRole="button"
                  accessibilityState={
                    Object {
                      "disabled": false,
                      "selected": false,
                    }
                  }
                  accessible={true}
                  focusable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Array [
                      Object {
                        "overflow": "hidden",
                      },
                      Array [
                        Object {
                          "borderRadius": 8,
                        },
                        Object {
                          "flexGrow": 1,
                        },
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      Array [
                        Object {
                          "alignItems": "center",
                          "flexDirection": "row",
                          "flexGrow": 1,
                          "paddingLeft": 4,
                          "position": "relative",
                        },
                        Object {
                          "paddingRight": 4,
                        },
                      ]
                    }
                  >
                    <Text
                      ellipsizeMode="tail"
                      numberOfLines={1}
                      selectable={false}
                      style={
                        Array [
                          Object {
                            "color": "#000000",
                            "fontFamily": "System",
                            "fontWeight": "400",
                          },
                          Object {
                            "textAlign": "left",
                          },
                          Array [
                            Object {
                              "lineHeight": 24,
                              "marginVertical": 4,
                              "minHeight": 24,
                              "textAlignVertical": "center",
                            },
                            Object {
                              "color": "rgba(171, 171, 171, 0.87)",
                              "fontFamily": "System",
                              "fontWeight": "400",
                              "marginLeft": 8,
                              "marginRight": 8,
                            },
                            undefined,
                          ],
                        ]
                      }
                    >
                      break
                    </Text>
                  </View>
                </View>
              </View>
            </View>
            <View
              onLayout={[Function]}
              style={null}
            >
              <View
                collapsable={false}
                style={
                  Object {
                    "backgroundColor": "#303030",
                    "borderColor": "rgba(171, 171, 171, 0.29)",
                    "borderRadius": 8,
                    "borderStyle": "solid",
                    "borderWidth": 2,
                    "elevation": 0,
                    "flexDirection": "column",
                    "margin": 5,
                  }
                }
              >
                <View
                  accessibilityRole="button"
                  accessibilityState={
                    Object {
                      "disabled": false,
                      "selected": false,
                    }
                  }
                  accessible={true}
                  focusable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Array [
                      Object {
                        "overflow": "hidden",
                      },
                      Array [
                        Object {
                          "borderRadius": 8,
                        },
                        Object {
                          "flexGrow": 1,
                        },
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      Array [
                        Object {
                          "alignItems": "center",
                          "flexDirection": "row",
                          "flexGrow": 1,
                          "paddingLeft": 4,
                          "position": "relative",
                        },
                        Object {
                          "paddingRight": 4,
                        },
                      ]
                    }
                  >
                    <Text
                      ellipsizeMode="tail"
                      numberOfLines={1}
                      selectable={false}
                      style={
                        Array [
                          Object {
                            "color": "#000000",
                            "fontFamily": "System",
                            "fontWeight": "400",
                          },
                          Object {
                            "textAlign": "left",
                          },
                          Array [
                            Object {
                              "lineHeight": 24,
                              "marginVertical": 4,
                              "minHeight": 24,
                              "textAlignVertical": "center",
                            },
                            Object {
                              "color": "rgba(171, 171, 171, 0.87)",
                              "fontFamily": "System",
                              "fontWeight": "400",
                              "marginLeft": 8,
                              "marginRight": 8,
                            },
                            undefined,
                          ],
                        ]
                      }
                    >
                      layout
                    </Text>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RCTScrollView>
      </View>
      <View
        style={
          Object {
            "flexDirection": "row",
            "marginBottom": 10,
          }
        }
      >
        <View
          style={
            Object {
              "flex": 1,
              "marginRight": 10,
              "placeholderTextColor": "#ffffff",
            }
          }
        >
          <View
            pointerEvents="none"
            style={
              Array [
                Object {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 6,
                },
                Object {
                  "backgroundColor": "#303030",
                  "borderColor": "#31adff",
                  "borderRadius": 4,
                  "borderWidth": 1,
                },
              ]
            }
            testID="text-input-outline"
          />
          <View>
            <View
              style={
                Array [
                  Object {
                    "paddingBottom": 0,
                  },
                  Object {
                    "minHeight": 64,
                    "paddingTop": 8,
                  },
                ]
              }
            >
              <TextInput
                editable={true}
                keyboardType="default"
                multiline={false}
                onBlur={[Function]}
                onChangeText={[Function]}
                onFocus={[Function]}
                placeholder="New tag..."
                placeholderTextColor="#ffffff"
                selectionColor="#ffd600"
                style={
                  Array [
                    Object {
                      "flexGrow": 1,
                      "margin": 0,
                      "paddingHorizontal": 14,
                      "zIndex": 1,
                    },
                    Object {
                      "height": 56,
                    },
                    Object {
                      "paddingBottom": 0,
                      "paddingTop": 0,
                    },
                    Object {
                      "color": "#ffd600",
                      "fontFamily": "System",
                      "fontSize": 16,
                      "fontWeight": undefined,
                      "textAlign": "left",
                      "textAlignVertical": "center",
                    },
                    false,
                    Array [
                      Object {},
                    ],
                  ]
                }
                testID="text-input-outlined"
                underlineColorAndroid="transparent"
                value=""
              />
            </View>
          </View>
        </View>
        <View
          style={
            Object {
              "alignSelf": "center",
            }
          }
        >
          <View
            collapsable={false}
            style={
              Object {
                "backgroundColor": "transparent",
                "borderColor": "#ffd600",
                "borderRadius": 4,
                "borderStyle": "solid",
                "borderWidth": 0.5,
                "elevation": 0,
                "minWidth": 64,
              }
            }
          >
            <View
              accessibilityRole="button"
              accessibilityState={
                Object {
                  "disabled": false,
                }
              }
              accessible={true}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Array [
                  Object {
                    "overflow": "hidden",
                  },
                  Object {
                    "borderRadius": 4,
                  },
                ]
              }
            >
              <View
                style={
                  Array [
                    Object {
                      "alignItems": "center",
                      "flexDirection": "row",
                      "justifyContent": "center",
                    },
                    undefined,
                  ]
                }
              >
                <Text
                  numberOfLines={1}
                  selectable={false}
                  style={
                    Array [
                      Object {
                        "color": "#000000",
                        "fontFamily": "System",
                        "fontWeight": "400",
                      },
                      Object {
                        "textAlign": "left",
                      },
                      Array [
                        Object {
                          "letterSpacing": 1,
                          "marginHorizontal": 16,
                          "marginVertical": 9,
                          "textAlign": "center",
                        },
                        undefined,
                        Object {
                          "textTransform": "uppercase",
                        },
                        Object {
                          "color": "#ffd600",
                          "fontFamily": "System",
                          "fontWeight": "500",
                        },
                        Object {
                          "fontFamily": "System",
                          "fontWeight": "500",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  add
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        collapsable={false}
        style={
          Object {
            "backgroundColor": "#ffd600",
            "borderColor": "transparent",
            "borderRadius": 4,
            "borderStyle": "solid",
            "borderWidth": 0,
            "elevation": 2,
            "minWidth": "auto",
            "shadowColor": "#000000",
            "shadowOffset": Object {
              "height": 0.75,
              "width": 0,
            },
            "shadowOpacity": 0.24,
            "shadowRadius": 1.5,
          }
        }
      >
        <View
          accessibilityRole="button"
          accessibilityState={
            Object {
              "disabled": false,
            }
          }
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Array [
              Object {
                "overflow": "hidden",
              },
              Object {
                "borderRadius": 4,
              },
            ]
          }
        >
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "justifyContent": "center",
                },
                undefined,
              ]
            }
          >
            <Text
              numberOfLines={1}
              selectable={false}
              style={
                Array [
                  Object {
                    "color": "#000000",
                    "fontFamily": "System",
                    "fontWeight": "400",
                  },
                  Object {
                    "textAlign": "left",
                  },
                  Array [
                    Object {
                      "letterSpacing": 1,
                      "marginHorizontal": 16,
                      "marginVertical": 9,
                      "textAlign": "center",
                    },
                    Object {
                      "marginHorizontal": 8,
                    },
                    Object {
                      "textTransform": "uppercase",
                    },
                    Object {
                      "color": "#000000",
                      "fontFamily": "System",
                      "fontWeight": "500",
                    },
                    Object {
                      "fontFamily": "System",
                      "fontWeight": "500",
                    },
                    undefined,
                  ],
                ]
              }
            >
              done
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</Modal>
`;
