// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`matches snapshot 1`] = `
<View
  style={
    Object {
      "width": "100%",
    }
  }
>
  <Text
    style={
      Object {
        "color": "#3183ff",
        "fontSize": 61.64383561643835,
        "fontWeight": "bold",
        "marginBottom": 10,
      }
    }
  >
    title
  </Text>
  <RCTScrollView
    data={Array []}
    getItem={[Function]}
    getItemCount={[Function]}
    keyExtractor={[Function]}
    listKey="title"
    onContentSizeChange={[Function]}
    onLayout={[Function]}
    onMomentumScrollBegin={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    removeClippedSubviews={false}
    renderItem={[Function]}
    scrollEnabled={false}
    scrollEventThrottle={50}
    stickyHeaderIndices={Array []}
    viewabilityConfigCallbackPairs={Array []}
  >
    <View />
  </RCTScrollView>
  <View
    collapsable={false}
    nativeID="animatedComponent"
    style={
      Object {
        "alignSelf": "center",
        "backgroundColor": "transparent",
        "borderColor": "transparent",
        "borderRadius": 4,
        "borderStyle": "solid",
        "borderWidth": 0,
        "elevation": 0,
        "marginTop": 10,
        "minWidth": 64,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessibilityState={
        Object {
          "disabled": false,
        }
      }
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Array [
          Object {
            "overflow": "hidden",
          },
          Object {
            "borderRadius": 4,
          },
        ]
      }
    >
      <View
        style={
          Array [
            Object {
              "alignItems": "center",
              "flexDirection": "row",
              "justifyContent": "center",
            },
            undefined,
          ]
        }
      >
        <Text
          numberOfLines={1}
          selectable={false}
          style={
            Array [
              Object {
                "color": "#000000",
                "fontFamily": "System",
                "fontWeight": "400",
              },
              Object {
                "textAlign": "left",
              },
              Array [
                Object {
                  "letterSpacing": 1,
                  "marginHorizontal": 16,
                  "marginVertical": 9,
                  "textAlign": "center",
                },
                undefined,
                Object {
                  "textTransform": "uppercase",
                },
                Object {
                  "color": "#3183ff",
                  "fontFamily": "System",
                  "fontWeight": "500",
                },
                Object {
                  "fontFamily": "System",
                  "fontWeight": "500",
                },
                undefined,
              ],
            ]
          }
        >
          button
        </Text>
      </View>
    </View>
  </View>
</View>
`;
