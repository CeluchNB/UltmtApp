// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`test matches snapshot 1`] = `
<View>
  <View
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": undefined,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      {
        "display": "flex",
        "flexDirection": "row",
        "opacity": 1,
      }
    }
    testID="search-result-item"
  >
    <View
      style={
        {
          "flex": 1,
        }
      }
    >
      <Text
        style={
          {
            "color": "#CEC6B4",
            "fontSize": 41.0958904109589,
            "fontWeight": "900",
          }
        }
      >
        header
      </Text>
      <Text
        style={
          {
            "color": "#ffd600",
            "fontSize": 30.821917808219176,
            "fontWeight": "900",
          }
        }
      >
        subheader
      </Text>
    </View>
    <ActivityIndicator
      animating={false}
      color="#ffd600"
      size="small"
    />
  </View>
  <View
    style={
      {
        "backgroundColor": "#7AC6FF",
        "height": 1,
        "marginBottom": 10,
        "marginTop": 10,
      }
    }
  />
</View>
`;

exports[`test matches snapshot with loading 1`] = `
<View>
  <View
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": undefined,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      {
        "display": "flex",
        "flexDirection": "row",
        "opacity": 1,
      }
    }
    testID="search-result-item"
  >
    <View
      style={
        {
          "flex": 1,
        }
      }
    >
      <Text
        style={
          {
            "color": "#CEC6B4",
            "fontSize": 41.0958904109589,
            "fontWeight": "900",
          }
        }
      >
        item
      </Text>
      <Text
        style={
          {
            "color": "#ffd600",
            "fontSize": 30.821917808219176,
            "fontWeight": "900",
          }
        }
      >
        subheader
      </Text>
    </View>
    <ActivityIndicator
      animating={true}
      color="#ffd600"
      size="small"
    />
  </View>
  <View
    style={
      {
        "backgroundColor": "#7AC6FF",
        "height": 1,
        "marginBottom": 10,
        "marginTop": 10,
      }
    }
  />
</View>
`;

exports[`test matches snapshot without subheader 1`] = `
<View>
  <View
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": undefined,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      {
        "display": "flex",
        "flexDirection": "row",
        "opacity": 1,
      }
    }
    testID="search-result-item"
  >
    <View
      style={
        {
          "flex": 1,
        }
      }
    >
      <Text
        style={
          {
            "color": "#CEC6B4",
            "fontSize": 41.0958904109589,
            "fontWeight": "900",
          }
        }
      >
        item
      </Text>
    </View>
    <ActivityIndicator
      animating={true}
      color="#ffd600"
      size="small"
    />
  </View>
  <View
    style={
      {
        "backgroundColor": "#7AC6FF",
        "height": 1,
        "marginBottom": 10,
        "marginTop": 10,
      }
    }
  />
</View>
`;
