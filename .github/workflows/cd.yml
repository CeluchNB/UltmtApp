name: Build and Deploy

on:
  push:
    branches:
      - main
      - cd-test

jobs:
  build-android:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Install dependencies
        run: yarn install --frozen-lockfile
        
      - name: Set up our JDK environment
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
      
      - name: Cache Gradle and wrapper
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}

      - name: Decode Keystore
        env:
          ENCODED_STRING: ${{ secrets.KEYSTORE_BASE64 }}
          SIGNING_KEY_STORE_PATH: ${{ secrets.SIGNING_KEY_STORE_PATH }}
        run: |
          cd android
          echo $ENCODED_STRING > keystore-b64.txt
          base64 -d keystore-b64.txt > $SIGNING_KEY_STORE_PATH

      - name: Build Release bundle
        env:
          SIGNING_KEY_STORE_PATH: ${{ secrets.SIGNING_KEY_STORE_PATH }}
          SIGNING_KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          SIGNING_KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
          SIGNING_STORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
        run: cd android ; ./gradlew bundleRelease
  
      - name: Upload Release Build to Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: release-artifacts
          paths: |
            app/build/outputs/bundle/release/

  # build-ios:
  #   runs-on: macos-latest
  #   steps: 
  #     - uses: actions/checkout@v2
  #     - name: Install Node
  #       uses: actions/setup-node@v2
  #       with: 
  #         node-version: '14'
  #     - name: Install RN CLI
  #       run: |
  #         yarn global add react-native-cli
  #     - name: Install Dependencies
  #       run: |
  #         yarn install

  #     - name: Building bundle
  #       run: |
  #         yarn react-native bundle --platform ios --dev false --entry-file index.js --bundle-output ios/main.jsbundle --assets-dest ios
      
  #     - name: Install pod dependencies
  #       run: |
  #         cd ios && pod install

  #     - name: Build app
  #       run: |
  #         cd ios
  #         xcodebuild -workspace UltmtApp.xcworkspace -configuration Debug -scheme UltmtApp
        
          